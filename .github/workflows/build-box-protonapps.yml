name: Build and Push Proton Apps container
on:
  schedule:
    - cron: "20 23 * * *" # 10:23pm everyday
  push:
env:
  IMAGE_NAME: protonapps
  IMAGE_TAGS: latest ${{ github.sha }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      # Build metadata
      # - name: Image Metadata
      # uses: docker/metadata-action@v5
      # id: docker_meta
      # with:
      # cosign_tag: ${{ env.IMAGE_NAME }}

      - name: Buildah Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          context: ./boxes/protonapps
          containerfiles: |
            ./boxes/protonapps/Containerfile
          extra-args: |
            --disable-content-trust
          oci: false

      - name: Push To GHCR
        id: push_image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      # Sign container
      - uses: sigstore/cosign-installer@v3.5.0
        if: github.event_name != 'pull_request'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign image with a key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest@${DIGEST}
        env:
          TAGS: ${{ steps.build_image.outputs.tags }}
          DIGEST: ${{ steps.push_image.outputs.digest }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Display outputs
        run: |
          echo "${{ toJSON(steps.push_image.outputs) }}"
